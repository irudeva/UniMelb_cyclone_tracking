TSTATX        Cyclone Track Statistics Programme
======

  This routine analyses cyclone tracks generated by programme "track*x" 
and produces fields of cyclone frequency and properties.  All inputs and 
outputs are in lat-lon form, but the analysis is performed on a NH or SH 
polar stereographic grid.

NAME
=====

    tstat{$versono}x

USAGE
=====

    tstat{$versno}x -t tfile -i ifile [-s sfile] [-z zfile] [-a afile] 
      [-g gfile] [-U] [-N] [-x exfmt] [-d idiag] [-D dastrt dastop] 
      [-S lon1 lon2] [-P pmfile -Z zmfile] [-l (or) -L llfile]

Summary of options
------------------

    Opt Arg.     Meaning of option

    -t: tfile    instruction file (default trackdat)
    -i: ifile    instruction file (default intstat)
    -s: sfile    2-D statistical output file )  At least one of these 4
    -z: zfile    zonal average data file     )  must be specified.  Files
    -a: afile    zonal average velocity file )  only written if output
    -g: gfile    P.S. formatted grid file    )  filenames specified
    -U           unformatted track data (default formatted)
    -N           track parameters in namelist form
                  (only relevant with -U option)
    -x: exfmt    extension to zonal average heading
    -d: idiag    diagnostic output level
    -D: d1,d2    Starting and ending dates for analysis
    -S: l1,l2    W and E longitude limits for zonal aves
    -P: pmfile   mean PMSL file              )  Both or neither must
    -Z: zmfile   mean z500 file              )  be given
    -l: llfile   unformatted lat-lon file for analysis )  Only one of 
    -L: llfile   formatted lat-lon file for analysis   )  these required

    -A, -F       (no longer used)

    Further information about the options is given under `OPTIONS' below. 

Some basic usages
-----------------

trackx -i ifile -t tfile -s sfile -L llfile   Programme compiles statistics 
                                              in sfile on grid given in llfile
                                              from formatted tracks in tfile 
                                              using instructions in ifile
trackx -i ifile -t tfile -z zfile -a afile    Programme compiles zonal
                                              statistics and zonal average
                                              velocity files

FILES
=====

    tstat.dir/{*F,*f,*h,Makefile}

OPTIONS
=======

    -d idiags
         This option, if used, uses an integer argument 1,2, or 3 to specify 
         the diagnostic output required.  The default, 0, gives basic
         diagnostics.

    -i ifile           
         Namelist input file for parameters controlling cyclone tracking,
         default is 'intstat'. (See section `NAMELIST INPUT' below.)

    -t tfile    
         Track data file (default trackdat)  (See section `DATA AND DATA 
         FORMATS' belwo.)
         

    -s sfile    Statistics required on a lat-lon grid and written to sfile.  
                  This option requires a lat-lon file using option -l or -L.
                  (See section `DATA AND DATA FORMATS' belwo.)
    -z zfile    Zonal average statistics
    -a afile    Zonal average velocity statistics.  These form part of the
                  statistics given with the z option and are in the form
                  required by trackx when zonal average climatological 
                  velocities are used in tracking.
    -b bfile    Regional average velocity statistics.  These form part of the
                  statistics given with the s option and are in the form
                  required by trackx when regional average climatological 
                  velocities are used in tracking.
    -g gfile    Sample statistics on the PS grid are written to a formatted
                  file gfile.
    -U   Track data are read from an unformatted file
    -N   Track data are read from an unformatted file, the track
           instruction parameters being stored in 80 character strings
           read as namelist input.
    -x   This option is followed by a string (aword or a group of words 
           enclosed in quotes) which is appended to the title of the
           zonal average data file heading
    -D   This is followed by two dates enclosed in a single pair of quotes
           which specify the beginning and end of the period over which 
           averages are compiled.  Dates given here take precedence over
           any given in the instruction file, where they may be alternatively
           given.  If not dates be specified, the whole tracked period is 
           used.
    -S   This is followed by two longitudes which specify the western and
           eastern limits of a sector over which zonal averages are to be
           calculated.  If the first be greater than the second, the sector
           is taken as spanning the Greenwich meridian.  The default is
           to take averages over all longitudes.  The option has no effect
           on the grid point analysis.
    -P   Option for reading in a climatological mean MSLP file, pmfile
    -Z   Option for reading in a climatological mean Z500 file, zmfile
    -l   Latitudes and longitudes are taken from an unformatted file llfile
    -L   Latitudes and longitudes are taken from a formatted file llfile


  Note:  The -A option indicated the track data format system that is used
exclusively now.  The -F option specified a formatted track data file.
This is now the default, and unformatted data is specified by the option
-U.  The -A and -F options are retained in the option list but are not
processed.

NAMELIST INPUT
==============

  Instruction parameters are given in a file containing the namelist 
record "nlmtstat".  

      namelist /nmltstat/idiags,dastrt,hrstrt,dastop,hrstop,
     * ddhms,hemis,dlat,iperdv,cvmns2,alatlt,wwqmin,
     * Rcdnlt,Rkdn,Rcwqlt,Rkwq,Rcgllt,Rkgl
     *  ,dystrts,hrstrts,dystops,hrstops ,ifc,projn
     *  ,ssd

The meanings of these quantities and their default values are as follows:

      idiags  = 1      ! Diagnostic output option

      dastrt = 0       ! Starting date (0=first data field used; otherwise the 
                       !   meaning depends on dmode.  If dmode='DDDHM', it is 
                       !   the day no; if dmode='YMDHM', 910311= 11th Mar. 1991)
      hrstrt = 0       ! Starting time
      dastop = 0       ! Finishing date (0=last data field used)
      hrstop = 0       ! Finishing time

                       ! dystrts,hrstrts,dystops,hrstops are accepted as 
                       ! alternatives for the above.

      ddhms  = 001200  ! Minimum track duration in days,hours,minutes 
                       !   (ddhhmm); e.g. 010000=1 day, 000600=6 hrs.
                       !   Tracks for which the time interval between
                       !   start (cyclogenesis) and finish (cyclolysis)
                       !   is less than this are disregarded.

      hemis   = ' '    ! The hemisphere in which the projection is done will 
                       ! depend on the latitude range of the cyclone data
                       ! unless specified 'N' or 'S'.

                       ! projn is accepted as alternative for hemis.

      dlat    = 5.0    ! Selection of stat. arrays
      iperdv  = 5      ! Interpolation intervals per period
      cvmns2  = 0.     ! Min. cv. open dep. at ends of tracks
      alatlt  = 15.    ! Minimum latitude (N. or S.)
      wwqmin  = 0.     ! Min. wt.ing for weighted (or regressed
                       !   quantities

      Rcdnlt  = 5.     ! Pass radius (deg.lat.) for cyc. density
      Rkdn    = 0.2    ! Pinching of prob. cve. (parabola=1)
      Rcwqlt  = 5      ! Pass radius (deg.lat.) for wt.'d funcs.
      Rkwq    = 0.2    ! Pinching of prob. cve. for wt.'d funcs.
      Rcgllt  = 0.     ! Pass radius (deg.lat.) for c'genesis funcs.
      Rkgl    = 0.     ! Pinching of prob. cve. for c'genesis funcs.

      ifc              !   (not used)

      ssd    = 1.      ! Scale system density by 1. For many cases scaling
		       ! by 1000. is useful to give values 0-40.

TRACK INPUT DATA FORMATS
========================

  The track file contains two types of record, a header block and a large 
number ("lstrk2") of variable length track records.

  The track file may formatted or unformatted.  For most applications,
a formatted file is more convenient, and it may be easily compressed.
An unformatted file may have two possible forms of the parameter list, 
one a straight listing (option -U) and the other a namelist listing 
(option -N).  When a namelist is used with an unformatted data file, 
the namelist is initially written to a scratch file; the individual 
lines of this file are stored as character strings in the data file.   

(a) File header formats
    -------------------

  The fortran statements for the file header as are as follows:

  (i) Formatted files
      ---------------

      write (iunit,'(a/)') ' TRACK HISTORY FILE'
      write (iunit,nmltrdata)
      write (iunit,'()')

  The namelist is

      namelist /nmltrdata/
     * quant,level,lunit,source,dmode,unit,cunit,area,
     * hilo,feat,latmnc,latmxc,lonmnc,lonmxc,
     * sdrmx,drmx1,drmx2,itmx1,itmx2,nshell,cvarad,
     * fmxc,frmxc,frcmxc,da0,hr0,ddhmt,iopmxt,cmnt1,cmnt2,
     * iadvtp,afile,refdt,wsteer,fsteer,asteer,wmotn,wpten,
     * dequiv,rcprob,rpbell,qmxopn,qmxwek,qmxnew,
     * nsort,irevmx,merget,qmerge,itabt3,itabt4,rsttks,
     * t1,da1,hr1,ic,tc,dac,hrc,nkc,ndt,lstrk1,lstrk2
 
  In addition to the parameters, the namelist includes some start
and finish information, viz.,

  t1       Decimal time in days of track start after an arbitrary
             `epoch', da0,hr0
  da1,hr1  Date and time of start of tracking

  ic       Current analysis time number
  tc       Decimal time in days of current time after da0,hr0  
  dac,hrc  Current date and time

  nkc      No. of cyclones at current time
  ndt      Time interval (days) of last analysis interval
  lstrk1   No. of last track before first uncompleted track
             (i.e., the last track of file thist2.1)
  lstrk2   No. of last track in track file

  (ii) Unformatted files
       -----------------
  
  The track parameters can be written simply as a single straight
record in the track file, using option -U, viz.,

      fileid = 'thist1'
      write (iunit) fileid,
     * quant,level,lunit,source,dmode,unit,cunit,area,
     * hilo,feat,latmnc,latmxc,lonmnc,lonmxc,
     * sdrmx,drmx1,drmx2,itmx1,itmx2,nshell,cvarad,
     * fmxc,frmxc,frcmxc,da0,hr0,ddhmt,
     * iopmxt,cmnt1,cmnt2,iadvtp,afile,refdt,wsteer,fsteer,
     * asteer,wmotn,wpten,dequiv,rcprob,rpbell,qmxopn,qmxnew,
     * nsort,irevmx,merget,qmerge,itabt3,itabt4,rsttks
      write (iunit) t1,da1,hr1,ic,tc,dac,hrc,nkc,ndt,
     * lstrk1,lstrk2

  Alternatively the parameters can be written as the namelist 
nmltrdata, defined above, which is written to the track file 
as character strings lnmlt(inmlt).  This has the advantage that
extra variables may be added without the format needing to
be changed; however, it may not be convenient to use it on some
operating systems.
 
      fileid = 'thnml'
      write (iunit) fileid,nnmlt
      do 80 inmlt = 1,nnmlt
        write (iunit) lnmlt(inmlt)
   80 continue

(b) Formats for individual track records
    ------------------------------------

  (i) Formatted files
      ---------------

      write (iunit,310) trk,statf,statl,ifst,ilst,nit,
     * idafst,ihrfst,idalst,ihrlst,itabt3z,itabt4z
  310 format (' Track ',i4,': stat = ',i1,i1,', ifst = ',i4,
     *     ', ilst = ',i4,', nit = ',i3,x,i6,i4,' - ',i6,i4,
     *     '.  (itab=',2i2,')')
   
      write (iunit,'(/a)') trtab(1:lntrtab)
      write (iunit,fmt) ((vart(m,isw(ivar)),ivar=1,nvar),m=1,nit)
      write (iunit,'()')

  (ii) Unformatted files
       -----------------

      fileid = 'thist2'
      write (iunit) fileid,trk,statf,statl,ifst,ilst,nit,
     * idafst,ihrfst,idalst,ihrlst,itabt3z,itabt4z
      write (iunit) ((vart(m,isw(ivar)),ivar=1,nvar),m=1,nit)

  The track record consists of a track header and the data for each 
individual time,  The information in the track header is as follows:

  trk             Sequential track number
  statf           Status of system at the start of the track record
  statk           Status of system at the end of the track record
  ifst            Analysis time number for the start of the track
  ilst            Analysis time number for the end of the track
  nit             Number of analysis times that the track covers
  idafst,ihrfst   Date and time of cyclogenesis
  idalst,ihrlst   Date and time of cyclolysis
  itabt3z         Tabulation specifier for cyclone characteristics
  itabt4z         Tabulation specifier for steering velocity

  The data is stored in an array vart(m,isw(ivar)).  The first
subscript ("m" or "it") is the analysis period relative to cyclo-
genesis (m=1) and the second is a pointer to the array location for
each variable required in the specified tabulation.  The tabulation
is ordered as follows.  

  t     Decimal time after da0,hr0
  da    Date
  hr    Hour
  stat  Status
  k     Cyclone no. in cyclone file
  iop   Open/closed status
  q     Matching probability
  x     Longitude                         
  y     Latitude                          
  p     Central pressure                  if itabt3 >= 1
  c     Delsq central pressure            if itabt3 >= 2
  dp    Cyclone depth                     if itabt3 >= 3
  rd    Cyclone radius                    if itabt3 >= 3
  up    Steering E'wds velocity           if itabt4 >= 1
  vp    Steering N'wds velocity           if itabt4 >= 1

  Depending on the extent of the tabulation specified by itabt3
and itabt4, only certain variables will be plotted.  The switching 
variable, "isw" points from a squential column number to the
required variable.

STATISTICAL CALCULATIONS
========================

(a) Statistical Quantities
    ----------------------

  The statistical variables fall into two groups, frequencies and regressions.
Frequency quantities include cyclone densities, cyclone fluxes, and rates
of cyclogenesis and cyclolysis.  These quantities are proportionate to the
number (and lifespan) of participating systems and may reduce to zero in
areas where there are no cyclones.  Regressed quantities include cyclone
velocity, measures of cyclone strength, and the (Lagrangian) tendencies of
these quantities.  These properties are not proportionate to cyclone numbers
and become undefined where there are no cyclones.  In addition, provision 
has been made for reading in and manipulating some time average quantities 
relevant to cyclone strength and movement.

  Frequency quantities
  --------------------

  System (or cyclone) density is the average number of cyclones per unit
area found in a particular locality.  It is independent of time.

  Cyclone flux is the average number of cyclones crossing unit normal to
the motion.  It may be calculated as either a scalar, i.e., the number
passing through a unit circle per unit time. irrespective of direction
(the scalar averaged flux) or as the components of a vector (i.e., the
numbers crossing eastwards across a N-S unit normal and crossing northwards
across a W-E normal per unit time).  The magnitude of the vector flux
(the nett vector-averaged flux) will not be the same as the scalar-averaged
flux: with balanced numbers of cyclones crossing in all directions, the 
former could be zero but the latter would not be.

  Cyclogenesis and cyclolysis refer to the number of new systems appearing
or old systems disappearing per unit area per unit time.

  Regressed quantities
  --------------------

  Cyclone movement is calculated as average speed (scalar-averaged velocity)
and (vector-averaged) velocity (components and total magnitude).

  Pressure related quantities include average central pressure, average
intensity (estimated as the Laplacian of the pressure averaged over a circle
of a stipulated radius), and if available average cyclone radius and depth.
The Lagrangian-averaged rate of change of pressure and intensity (i.e. the
average rate of change of these quantities in individual systems) is also
calculated.

  Large scale quantities
  ----------------------

  From the sea-level pressure and 500 mb. height, if provided, the programme
calculates the Laplacian of the pressure and the 500 mb. geostrophic velocity
(which may be scaled to provide as a time mean steering velocity).

(b) Summary of statistical quantities
    --------------------------------- 

  TN     /GRID UNIT        Tot. track density     

  SD     /DEG.LAT.SQ       System density         
  FG     /1000 DLSQ/D      Cyclogenesis           
  FL     /1000 DLSQ/D      Cyclolysis             

  FS     /DEG.LAT./D       Scalar ave'd flux      
  FE     /DEG.LAT./D       Eastward flux          
  FN     /DEG.LAT./D       Northward flux         
  FV     /DEG.LAT./D       Nett flux              

  US     M/S               Ave. speed             
  UE     M/S               Eastward velocity      
  UN     M/S               Northward velocity     
  UV     M/S               Nett velocity          

  PC     MB                Ave. central pressure  
  PT     MB/D              Ave.pressure tendency  
  CC     MB/DLSQ           Ave. central delsq p     )  Calculated if cc
  CT     MB/DLSQ/D         Ave.delsq p tendency     )  provided (itabt3>=2)
  RD     DEG.LAT.          Central radius           )  Calculated if rd,dp
  DP     MB                Depth                    )  provided (itabt3=3)

  GE     M/S               Eastwd geos. vel.        )  Calculated if up,vp
  GN     M/S               Northwd geos. vel.       )  tabulated 
  GV     M/S               Nett geos. vel.          )  (itabt4=1)

  PM     MB                Mean pressure            )
  CM     MB/DLSQ           Mean delsq p             )  Calculated if
  PD     MB                Central p diff.          )  pmfile and zmfile
  HE     M/S               Eastwd 500 mb. wind      )  provided
  HN     M/S               Northwd 500 mb. wind     )
  HV     M/S               Nett 500 mb. wind        )

  The arrays for the statistical quantity information in the code contain
references to a number of variables which are not now used.  These relate
to a period when the output was in PS array form and to quantities which
were of specialised interest.

(c) Method of computation
    ---------------------

  Tracks may be screened for minimum lifetime, etc.

  Because a cyclone may travel over more than one grid square in an analysis
interval, each cyclone track is subdivided by interpolating it to a number
of interpolated positions equally spaced in time.  This is done by fitting
a cubic spline to the tracked positions in each coordinate direction and
interpolating to obtain the coordinates of the subdivided track.  Spline
fitting is also applied to the pressure-related scalar quantities,  It
permits easy calculation of the the time derivatives of the fitted quantities,
viz., velocity components and rates of change of pressure and intensity.

  For the zonal average analysis, cyclones and their properties for each
sampled (i.e. tracked or interpolated) time are accumulated in latitude zones 
of specified extent and then normalised for time and area as appropriate.

  For the grid point statistics, cyclones and their properties are not 
assigned to grid cells, but rather are spread over nearby grid points using 
an analysis or smoothing function.

The distribution is handled differently for frequencies and regressions
and the smoothing parameters may be set differently (usually without a
smaller pass radius for frequencies).  For frequency quantities, each
cyclone is given a weighting of unity, i.e., the sum of all the statistical
function values distributed to the points within the pass radius are
normalised to this value.  For regressed quantities, each grid point
accumulates the value of the quantity at the cyclone centre weighted by
the statistical function.  The normalisation at each point is done after
contributions have been summed over the whole statistical period by 
dividing the relevant sum of the weighted variable by the sum of weights
for that point.

  Both the time interpolation and the analysis make use of the slow and
smooth variation of map scale on the polar stereographic projection.  For 
the analysis, a constant map scale is assumed within the Cressman radius.
The same projection is used for both interpolation and analysis.  This
works well in the usual situation in which an analysis is performed in a
single hemisphere.  Meteorological lows are most unlikely to cross the
Equator and even less likely to cross large distances in both hemispheres.
However, some precautions are needed when the track data are global.
To guard against distortions of the projected tracks which might affect the
spline fitting, tracks which stray more than 40 degrees into the opposite
hemisphere are disregarded.

  At some time in the future, it is planned to convert the tracked positions
to (three) rectilinear coordinates and use these for interpolation.  The
analysis would still be done on the P.S. grid for the chosen hemisphere.
For global tracks, it could be done on NH and SH grids separately and the
each lat-lon analyses could be put together from data interpolated from the
two halves.

(d) Notes on aspects of the computation
    -----------------------------------

  (i) Projection information
      ----------------------

  The analysis is performed on a NH or SH polar stereographic grid.  The
array size (ni,nj) and the resolution, defined by rproj, the no. of grid 
point spaces between pole and equator are set as parameters in the
include file tstat1.h.  The pole is located at the centre of the array,
i.e., xcen = (ni+1)/2, ycen = (nj+1)/2.  The only adjustable quantity is
"hemis", which specifies the hemisphere on which the analysis is required.
If not given, the programme will choose it from the hemisphere in which
the mean latitude, 0.5*(latmnc+latmxc) lies.

  (ii) Analysis function
       -----------------

  The analysis of cyclone frequencies and regressions is carried out
using a Cressman-like function,

      f = (Rc**2 - r**2)/(Rc**2 + r**2*Rr**2) ,

where r  is the distance of the grid point from the cyclone position,
      Rc is the pass radius at which f becomes zero,
      Rr is a parameter derived from a related parameter Rk which
           controls the shape of the bell shaped curve, viz.,

      Rk        Rr         Shape
 
      1.0        0         Inverted parabola:   1 - rsq/Rsq
      0.5        1         Cressman function:   (Rsq-rsq)/(Rsq+rsq)
     ~0.0      ~oo        ~inverse square:      Rsq/rsq

These parameters are normally set differently for frequency and regressed
quantities and are named as follows:

      Rcdnlt, Rkdn         Frequency quantities (except cyclogenesis/lysis)
      Rcwqlt, Rkwq         Regressed (weighted) quantities
      Rcgllt, Rkgl         Cyclogenesis/lysis (these default to Rcwqlt,
                             Rkwq unless Rcgllt defined > 0)
 
OUTPUT DATA FORMATS
===================

(a) Grid point statistical output
    -----------------------------

   Grid point statistics are given as a concatenation of the data for 
the above statistical variables.  The data for each variable are given 
as lat-lon arrays in CIF (conmap input file) form, viz.

      write (iunit) nlat                         ! No. of latitudes
      write (iunit) (lat(j),j=1,nlat)            ! Latitudes
      write (iunit) nlon                         ! No. of longitudes
      write (iunit) (lon(i),i=1,nlon)            ! Longitudes
      write (iunit) head                         ! 80 character header
      write (iunit) ((f(i,j),i=1,nlon),j=1,nlat) ! Array data

  The statistical field header line indicates the statistical quantity by
a 2-digit variable code, whether the quantity refers to lows or highs (LO 
or HI), the field in which the lows or highs are found (quantity and level), 
the data source, the statistical period, the units of the statistical 
quantity (not the field quantity), and the grid resolution.

(b) Zonal average statistical output
    -------------------------------

      do 30 ls = lslt,1,-1
        write (iozn,20) alatlo,alathi,alatav,ifglz(ls),fglz,
     *   ifllz(ls),fllz,iflz,sdlz,fslz,felz,fnlz,fvlz,
     *   ulz(ls),vlz(ls),plz(ls),ptlz(ls),clz(ls),ctlz(ls)
  20    format (f4.1,'-',f4.1,f5.1,x,2(i5,f6.2),i7,f7.2,
     *   4f7.1,x,2f6.1,f8.1,f6.1,f6.2,f7.2,f7.1,f6.1)
  30  continue

  The variables listed and the codes for the regional equivalents are

  alatlo     Lower latitude limit of zone
  alathi     Upper latitude limit of zone
  alatav     Average latitude for zone
  ifglz      No. of cyclogeneses in latitude band
  fglz       Frequency of cyclogenesis                        FG
               (cyclogeneses/deg.lat.**2/day * 1000
  ifllz      No. of cyclolyses in latitude band
  fllz       Frequency of cyclolyses                          FL
               (cyclolyses/deg.lat.**2/day * 1000
  iflz       No. of cyclone positions 
  sdlz       Cyclone density (cyclones/deg.lat**2 * 1000)     SD
  fzlz       Average scalar cyclone flux                      FS
  felz       Eastward cyclone flux                            FE
  fnlz       Northward cyclone flux                           FS
  fvlz       Magnitude of vector cyclone flux                 FV
  ulz        Eastward cyclone velocity                        UE
  vlz        Northward cyclone velocity                       UN
  plz        Average central pressure                         PC
  ptlz       Average central pressure tendency                PT
  clz        Laplacian of average central pressure            CC
  ctlz       Laplacian of average central pressure tendency   CT
 
(c) Predition velocity output data
    ------------------------------

  The tracking scheme uses predictions of cyclone displacements as an
aid to matching lows at successive analysis intervals.  Predictions of
cyclone displacement are calculated from (a) thermal steering, 
(b) the previous movement of the cyclone, (c) climatological cyclone
velocities, or a combination of these.  For tracking initially, 
climatological velocities will provided from observations or other
information; however, after tracking the first time, the statistics
provide velocities which are characteristics of the climatology of the
cyclones being tracked, and these can be reused in a second pass of the
tracking process.  The statistics programme will provide these velocities
in a form that can be used by trackx.

  Prediction velocities are read by trackx as zonal averages from the a 
formatted file or as u and v lat.-lon. arrays from an unformatted file.
Zonal average velocities form part of the zonal average data available
using the -z option, but will be written in the form required by the
-a option in trackx by specifying -a afile in tstatx.  Regional average
velocitiess, as used with the -b option in trackx, form part of the grid 
point statistical analyses.  These two components may be written to a
separate file specified using the -b option with tstatx.  In both casse
the velocities are in m/s and the components are oriented east and north.

  The Fortran statement for zonal average velocities are:

      write (iunit,'(a80)') card
      write (iunit,*) nja
      do 120 ja = 1,nja
        write (iunit,*) lat(ja),u(ja),v(ja)
  120 continue

  Regional velocities are written to a single unformatted file containing
two concatenated CIF (conmap input file) records, for the u (east) and v 
(north) components; the u componet record is written by

      write (iunit) nlat                         ! No. of latitudes
      write (iunit) (lat(j),j=1,nlat)            ! Latitudes
      write (iunit) nlon                         ! No. of longitudes
      write (iunit) (lon(i),i=1,nlon)            ! Longitudes
      write (iunit) head                         ! 80 character header
      write (iunit) ((u(i,j),i=1,nlon),j=1,nlat) ! Array data


COMPILATION
===========

  Programmes are best built using make.  A number of the routines accessed
by the programme bear a '.F' suffix and pass through a cc preprocessor to
collect and check changes in included files.

  In order to keep track of modifications to the code, variations to
routines and executables are given version numbers.  Only the currently 
used versions of the routines are provided.

  Grid point statisitics can be calculated on a PS grid of any 
resolution and interpolated to any lat-lon resolution.  It is advisable
to keep the two resolutions comparable.  Changes in resolution and
changes to the latitudinal extent of the PS grid require recompilation 
with changes to the programme parameters.  Three `include' files with
different sets of parameters are given (tstat1D_*.h).

FORTRAN PORTABILITY
===================

  Most features of the system have been tested on SUNOS and SUN Solaris
machines.  SUN Fortran allows some constructions which other platforms
do not permit, and attention is drawn to the following types of syntax
or statement which may cause trouble.

(1)  Cases have been found of "go to" statements transferring control to
locations inside do loops or conditional blocks.  It is believed that 
none of these now remain; however, if found, they may cause compilation
errors.

(2)  Undefined variables are set to zero on the SUN but may return NaN
on other platforms or may give a compilation error.  These may still exist 
in rarely used diagnostics and may be set to zero if found in such places.

(3)  Instruction parameters for programmes are given in namelist input
and output.  Namelist records also occur in cyclone and track data files.
The use of this format is now widespread, but some machines may not 
recognise it, in which case input file reading routines or statements 
which use them may need to be modified.

(4)  Some machines write namelists one variable per line, although they
read namelist records which have more than one variable per line.  In
such a case, the dimension of lnmlc in subroutines cychdwr, cychdrd,
and cycio in file cycio.F should be changed from 20 to 100.  Alternative-
ly, a routine could be written to concatenate strings to make up lines
of 80 characters.

(5)  There may be some logical expressions are converted to integers
using int(), e.g.,

      n = 1 + int(x.ge.100)

If found and causing compilation errors, they may need to expanded
appropriately.

(6)  Some machines do not recognise data format fields such as
'1pe3.10.1', which may need to be converted to '1pe3.10', 'e3.10', or
something similar.

(7)  Null do loops may exist in subroutines and "trackioa", if the ending 
index be less than the starting index.  SunOS and Sun Solaris systems skip 
such loops; but some systems may process the first item of the loop,
in which case conditional statements must be included in the code.
